<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Nito.Async.Sockets</name>
  </assembly>
  <members>
    <member name="T:Nito.Async.Sockets.CallbackOnErrorsOnly">
      <summary>
            This is a special class that may be passed to some WriteAsync methods to indicate that WriteCompleted should not be called on success.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.CallbackOnErrorsOnly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Nito.Async.Sockets.CallbackOnErrorsOnly" /> class</summary>
    </member>
    <member name="T:Nito.Async.Sockets.ClientTcpSocket">
      <summary>
            Represents a client socket built on the asynchronous event-based model (see <see cref="T:Nito.Async.Sockets.IAsyncTcpConnection" />).
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Nito.Async.Sockets.ClientTcpSocket" /> class.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.Bind(System.Net.IPEndPoint)">
      <summary>
            Binds to a local endpoint. This method is not normally used.
            </summary>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>
            Initiates a connect operation.
            </summary>
      <param name="address">The address of the server to connect to.</param>
      <param name="port">The port of the server to connect to.</param>
      <param name="server">The address and port of the server to connect to.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.ConnectAsync(System.Net.IPEndPoint)">
      <summary>
            Initiates a connect operation.
            </summary>
      <param name="server">The address and port of the server to connect to.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ClientTcpSocket.ConnectCompleted">
      <summary>
            Indicates the completion of a connect operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.Dispose">
      <summary>
            Gracefully or abortively closes the socket connection. See <see cref="M:Nito.Async.Sockets.ClientTcpSocket.Close" />.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ClientTcpSocket.LingerState">
      <summary>
    
            If and how long a graceful shutdown will be performed in the background.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ClientTcpSocket.LocalEndPoint">
      <summary>
    
            Returns the IP address and port on this side of the connection.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ClientTcpSocket.NoDelay">
      <summary>
    
            True if the Nagle algorithm has been disabled.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.ReadAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a read operation.
            </summary>
      <param name="buffer">The buffer to receive the data.</param>
      <param name="offset">The offset into <paramref name="buffer" /> to write the received data.</param>
      <param name="size">The maximum number of bytes that may be written into <paramref name="buffer" /> at <paramref name="offset" />.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ClientTcpSocket.ReadCompleted">
      <summary>
            Indicates the completion of a read operation, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ClientTcpSocket.RemoteEndPoint">
      <summary>
    
            Returns the IP address and port on the remote side of the connection.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.ClientTcpSocket.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.WriteAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ClientTcpSocket.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ClientTcpSocket.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.IAsyncTcpConnection">
      <summary>
            Represents a connected data socket built on the asynchronous event-based model.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.IAsyncTcpConnection.LingerState">
      <summary>
            If and how long a graceful shutdown will be performed in the background.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.IAsyncTcpConnection.LocalEndPoint">
      <summary>
            Returns the IP address and port on this side of the connection.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.IAsyncTcpConnection.NoDelay">
      <summary>
            True if the Nagle algorithm has been disabled.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.ReadAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a read operation.
            </summary>
      <param name="buffer">The buffer to receive the data.</param>
      <param name="offset">The offset into <paramref name="buffer" /> to write the received data.</param>
      <param name="size">The maximum number of bytes that may be written into <paramref name="buffer" /> at <paramref name="offset" />.</param>
    </member>
    <member name="E:Nito.Async.Sockets.IAsyncTcpConnection.ReadCompleted">
      <summary>
            Indicates the completion of a read operation, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.IAsyncTcpConnection.RemoteEndPoint">
      <summary>
            Returns the IP address and port on the remote side of the connection.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.IAsyncTcpConnection.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.WriteAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="M:Nito.Async.Sockets.IAsyncTcpConnection.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.ISimpleAsyncTcpConnection">
      <summary>
            Represents a connected data socket built on the asynchronous event-based model using a simple packet/keepalive protocol.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ISimpleAsyncTcpConnection.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ISimpleAsyncTcpConnection.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ISimpleAsyncTcpConnection.KeepaliveTimeout">
      <summary>
            The amount of time the socket waits before sending a keepalive packet.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ISimpleAsyncTcpConnection.LingerState">
      <summary>
            If and how long a graceful shutdown will be performed in the background.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ISimpleAsyncTcpConnection.LocalEndPoint">
      <summary>
            Returns the IP address and port on this side of the connection.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ISimpleAsyncTcpConnection.NoDelay">
      <summary>
            True if the Nagle algorithm has been disabled.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.PacketArrived">
      <summary>
            Indicates the arrival of a packet, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ISimpleAsyncTcpConnection.RemoteEndPoint">
      <summary>
            Returns the IP address and port on the remote side of the connection.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ISimpleAsyncTcpConnection.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.ServerChildTcpSocket">
      <summary>
            Represents a child connection of a listening server socket, built on the asynchronous event-based model (see <see cref="T:Nito.Async.Sockets.IAsyncTcpConnection" />).
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.Dispose">
      <summary>
            Gracefully or abortively closes the socket connection. See <see cref="M:Nito.Async.Sockets.ServerChildTcpSocket.Close" />.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ServerChildTcpSocket.LingerState">
      <summary>
            If and how long a graceful shutdown will be performed in the background.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ServerChildTcpSocket.LocalEndPoint">
      <summary>
            Returns the IP address and port on this side of the connection.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ServerChildTcpSocket.NoDelay">
      <summary>
            True if the Nagle algorithm has been disabled.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.ReadAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a read operation.
            </summary>
      <param name="buffer">The buffer to receive the data.</param>
      <param name="offset">The offset into <paramref name="buffer" /> to write the received data.</param>
      <param name="size">The maximum number of bytes that may be written into <paramref name="buffer" /> at <paramref name="offset" />.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ServerChildTcpSocket.ReadCompleted">
      <summary>
            Indicates the completion of a read operation, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ServerChildTcpSocket.RemoteEndPoint">
      <summary>
            Returns the IP address and port on the remote side of the connection.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.ServerChildTcpSocket.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.WriteAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The buffer containing the data to write to the socket.</param>
      <param name="offset">The offset of the data within <paramref name="buffer" />.</param>
      <param name="size">The number of bytes of data, at <paramref name="offset" /> within <paramref name="buffer" />.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerChildTcpSocket.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="buffer">The data to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.IAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.ServerChildTcpSocket.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.ServerTcpSocket">
      <summary>
            Represents a listening server socket built on the asynchronous event-based model.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Nito.Async.Sockets.ServerTcpSocket" /> class.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.AcceptAsync">
      <summary>
            Initiates an accept operation.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.ServerTcpSocket.AcceptCompleted">
      <summary>
            Indicates the completion of an accept operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="port">The port of the local endpoint.</param>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Int32,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="port">The port of the local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Net.IPAddress,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="address">The address of the local endpoint.</param>
      <param name="port">The port of the local endpoint.</param>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Net.IPAddress,System.Int32,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="address">The address of the local endpoint.</param>
      <param name="port">The port of the local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Net.IPEndPoint)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Bind(System.Net.IPEndPoint,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening.
            </summary>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Close">
      <summary>
            Closes the listening socket immediately and frees all resources.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.ServerTcpSocket.Dispose">
      <summary>
            Closes the listening socket. See <see cref="M:Nito.Async.Sockets.ServerTcpSocket.Close" />.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.ServerTcpSocket.LocalEndPoint">
      <summary>
            Returns the IP address and port of the listening socket.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.SimpleClientTcpSocket">
      <summary>
            Represents a client socket built on the asynchronous event-based model using a simple packet/keepalive protocol (see <see cref="T:Nito.Async.Sockets.ISimpleAsyncTcpConnection" />).
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Nito.Async.Sockets.SimpleClientTcpSocket" />.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.Bind(System.Net.IPEndPoint)">
      <summary>
            Binds to a local endpoint. This method is not normally used.
            </summary>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>
            Initiates a connect operation.
            </summary>
      <param name="address">The address of the server to connect to.</param>
      <param name="port">The port of the server to connect to.</param>
      <param name="server">The address and port of the server to connect to.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.ConnectAsync(System.Net.IPEndPoint)">
      <summary>
            Initiates a connect operation.
            </summary>
      <param name="server">The address and port of the server to connect to.</param>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleClientTcpSocket.ConnectCompleted">
      <summary>
            Indicates the completion of a connect operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.Dispose">
      <summary>
            Gracefully or abortively closes the socket connection. See <see cref="M:Nito.Async.Sockets.SimpleClientTcpSocket.Close" />.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleClientTcpSocket.KeepaliveTimeout">
      <summary>
            The amount of time the socket waits before sending a keepalive packet.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleClientTcpSocket.LingerState">
      <summary>
    
            If and how long a graceful shutdown will be performed in the background.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleClientTcpSocket.LocalEndPoint">
      <summary>
    
            Returns the IP address and port on this side of the connection.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleClientTcpSocket.NoDelay">
      <summary>
    
            True if the Nagle algorithm has been disabled.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleClientTcpSocket.PacketArrived">
      <summary>
            Indicates the arrival of a packet, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleClientTcpSocket.RemoteEndPoint">
      <summary>
    
            Returns the IP address and port on the remote side of the connection.
            
            Only valid once the socket is connected.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleClientTcpSocket.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleClientTcpSocket.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleClientTcpSocket.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.SimpleServerChildTcpSocket">
      <summary>
            Represents a child connection of a listening server socket, built on the asynchronous event-based model using a simple packet/keepalive protocol (see <see cref="T:Nito.Async.Sockets.ISimpleAsyncTcpConnection" />).
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.AbortiveClose">
      <summary>
            Abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.Close">
      <summary>
            Gracefully or abortively closes the socket. Once this method is called, no operations will complete.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.Dispose">
      <summary>
            Gracefully or abortively closes the socket connection. See <see cref="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.Close" />.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerChildTcpSocket.KeepaliveTimeout">
      <summary>
            The amount of time the socket waits before sending a keepalive packet.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerChildTcpSocket.LingerState">
      <summary>
            If and how long a graceful shutdown will be performed in the background.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerChildTcpSocket.LocalEndPoint">
      <summary>
            Returns the IP address and port on this side of the connection.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerChildTcpSocket.NoDelay">
      <summary>
            True if the Nagle algorithm has been disabled.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleServerChildTcpSocket.PacketArrived">
      <summary>
            Indicates the arrival of a packet, either successfully or with error.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerChildTcpSocket.RemoteEndPoint">
      <summary>
            Returns the IP address and port on the remote side of the connection.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.ShutdownAsync">
      <summary>
            Initiates a shutdown operation. Once a shutdown operation is initiated, only the shutdown operation will complete.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleServerChildTcpSocket.ShutdownCompleted">
      <summary>
            Indicates the completion of a shutdown operation, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.WriteAsync(System.Byte[])">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerChildTcpSocket.WriteAsync(System.Byte[],System.Object)">
      <summary>
            Initiates a write operation.
            </summary>
      <param name="packet">The packet to write to the socket.</param>
      <param name="state">The context, which is passed to <see cref="E:Nito.Async.Sockets.ISimpleAsyncTcpConnection.WriteCompleted" /> as <c>e.UserState</c>.</param>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleServerChildTcpSocket.WriteCompleted">
      <summary>
            Indicates the completion of a write operation, either successfully or with error.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.SimpleServerTcpSocket">
      <summary>
            Represents a listening server socket built on the asynchronous event-based model.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Nito.Async.Sockets.SimpleServerTcpSocket" />.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Close">
      <summary>
            Closes the listening socket immediately and frees all resources.
            </summary>
    </member>
    <member name="E:Nito.Async.Sockets.SimpleServerTcpSocket.ConnectionArrived">
      <summary>
            Indicates the arrival of a new socket connection, either successfully or with error.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Dispose">
      <summary>
            Closes the listening socket. See <see cref="M:Nito.Async.Sockets.SimpleServerTcpSocket.Close" />.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="port">The port of the local endpoint.</param>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Int32,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="port">The port of the local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Net.IPAddress,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="address">The address of the local endpoint.</param>
      <param name="port">The port of the local endpoint.</param>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Net.IPAddress,System.Int32,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="address">The address of the local endpoint.</param>
      <param name="port">The port of the local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
      <param name="bindTo">The local endpoint.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Net.IPEndPoint)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SimpleServerTcpSocket.Listen(System.Net.IPEndPoint,System.Int32)">
      <summary>
            Binds to a local endpoint and begins listening and accepting connections.
            </summary>
      <param name="bindTo">The local endpoint.</param>
      <param name="backlog">The number of backlog connections for listening.</param>
    </member>
    <member name="P:Nito.Async.Sockets.SimpleServerTcpSocket.LocalEndPoint">
      <summary>
            Returns the IP address and port of the listening socket.
            </summary>
    </member>
    <member name="T:Nito.Async.Sockets.SocketPacketProtocol">
      <summary>
            Maintains the necessary buffers for applying a packet protocol over a stream-based socket.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SocketPacketProtocol.#ctor(Nito.Async.Sockets.IAsyncTcpConnection)">
      <summary>
            Initializes a new instance of the <see cref="T:Nito.Async.Sockets.SocketPacketProtocol" /> class bound to a given socket connection.
            </summary>
      <param name="socket">The socket used for communication.</param>
    </member>
    <member name="E:Nito.Async.Sockets.SocketPacketProtocol.PacketArrived">
      <summary>
            Indicates the completion of a packet read from the socket.
            </summary>
    </member>
    <member name="P:Nito.Async.Sockets.SocketPacketProtocol.Socket">
      <summary>
            Gets the socket used for communication.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SocketPacketProtocol.Start">
      <summary>
            Begins reading from the socket.
            </summary>
    </member>
    <member name="M:Nito.Async.Sockets.SocketPacketProtocol.WriteKeepaliveAsync(Nito.Async.Sockets.IAsyncTcpConnection)">
      <summary>
            Sends a keepalive (0-length) packet to the socket.
            </summary>
      <param name="socket">The socket used for communication.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SocketPacketProtocol.WritePacketAsync(Nito.Async.Sockets.IAsyncTcpConnection,System.Byte[])">
      <summary>Sends a packet to a socket.</summary>
      <param name="socket">The socket used for communication.</param>
      <param name="packet">The packet to send.</param>
      <param name="state">The user-defined state that is passed to WriteCompleted. May be null.</param>
    </member>
    <member name="M:Nito.Async.Sockets.SocketPacketProtocol.WritePacketAsync(Nito.Async.Sockets.IAsyncTcpConnection,System.Byte[],System.Object)">
      <summary>Sends a packet to a socket.</summary>
      <param name="socket">The socket used for communication.</param>
      <param name="packet">The packet to send.</param>
      <param name="state">The user-defined state that is passed to WriteCompleted. May be null.</param>
    </member>
  </members>
</doc>